plugins {
    id 'base'
    id 'org.springframework.boot' version '3.5.4' apply false
    id 'io.spring.dependency-management' version '1.1.6' apply false
}

// 루트 프로젝트 설정
group = 'com.example.tradingbot'
version = '1.0.0-SNAPSHOT'

// 백엔드 서브프로젝트만 Java 설정 적용
configure(project(':backend')) {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    
    group = 'com.example.tradingbot'
    version = '1.0.0-SNAPSHOT'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    
    repositories {
        mavenCentral()
    }
    
    dependencies {
        // Spring Boot 기본
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

        // JWT
        implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
        implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

        // Google OAuth2 (commons-logging 제외)
        implementation('com.google.api-client:google-api-client:1.35.2') {
            exclude group: 'commons-logging', module: 'commons-logging'
        }

        // PostgreSQL
        runtimeOnly 'org.postgresql:postgresql'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // Swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

        // 테스트
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
    
    tasks.named('test') {
        useJUnitPlatform()
    }
}

// 프론트엔드는 Node.js 프로젝트이므로 Gradle 설정 제외
configure(project(':frontend')) {
    // Node.js 프로젝트 - Gradle 빌드 제외
}

// 트레이딩 엔진은 Python 프로젝트이므로 Gradle 설정 제외  
configure(project(':trading-engine')) {
    // Python 프로젝트 - Gradle 빌드 제외
}